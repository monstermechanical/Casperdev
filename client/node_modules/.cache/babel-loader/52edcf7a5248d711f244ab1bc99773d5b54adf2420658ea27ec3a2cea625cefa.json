{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Grid,Paper,Typography,Card,CardContent,List,ListItem,ListItemText,ListItemIcon,Chip,Button,Divider,Alert,CircularProgress,Tabs,Tab}from'@mui/material';import{CloudDone,Database,Wifi,People,Message,Notifications,Security,Speed,CheckCircle,Warning,Error as ErrorIcon,Refresh}from'@mui/icons-material';import{useQuery}from'react-query';import axios from'axios';import{useAuth}from'../contexts/AuthContext';import{useSocket}from'../contexts/SocketContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConnectionHub=()=>{var _systemHealth$service,_systemHealth$service2,_systemHealth$service3,_systemHealth$service4,_systemHealth$service5,_systemHealth$service6,_systemHealth$service7,_systemHealth$service8,_systemHealth$service9,_systemHealth$service0,_systemHealth$service1,_systemHealth$service10,_systemHealth$service11,_systemHealth$service12,_systemHealth$service13,_systemHealth$service14,_systemHealth$service15,_systemHealth$service16,_systemHealth$metrics,_systemHealth$metrics2,_systemHealth$metrics3,_systemHealth$metrics4,_systemHealth$metrics5,_systemHealth$metrics6,_userConnections$conn,_systemHealth$service17,_systemHealth$service18,_systemHealth$service19,_systemHealth$service20,_systemHealth$service21,_systemHealth$service22,_systemHealth$service23,_systemHealth$service24,_systemHealth$service25,_systemHealth$service26,_systemHealth$service27,_systemHealth$service28;const[tabValue,setTabValue]=useState(0);const[systemHealth,setSystemHealth]=useState(null);const[refreshing,setRefreshing]=useState(false);const{user}=useAuth();const{connected:socketConnected,getConnectionStatus}=useSocket();// Fetch system health data\nconst{data:healthData,isLoading,refetch}=useQuery('systemHealth',()=>axios.get('/api/data/health').then(res=>res.data),{refetchInterval:30000,onSuccess:data=>setSystemHealth(data)});// Fetch user connections\nconst{data:userConnections}=useQuery(['userConnections',user===null||user===void 0?void 0:user.id],()=>axios.get(`/api/users/${user.id}/connections`).then(res=>res.data),{enabled:!!(user!==null&&user!==void 0&&user.id)});const handleTabChange=(event,newValue)=>{setTabValue(newValue);};const handleRefresh=async()=>{setRefreshing(true);await refetch();setRefreshing(false);};const getStatusIcon=status=>{switch(status){case'connected':case'active':return/*#__PURE__*/_jsx(CheckCircle,{color:\"success\"});case'simulated':return/*#__PURE__*/_jsx(Warning,{color:\"warning\"});case'disconnected':case'inactive':return/*#__PURE__*/_jsx(ErrorIcon,{color:\"error\"});default:return/*#__PURE__*/_jsx(Warning,{color:\"action\"});}};const getStatusColor=status=>{switch(status){case'connected':case'active':return'success';case'simulated':return'warning';case'disconnected':case'inactive':return'error';default:return'default';}};const connectionStatus=getConnectionStatus();if(isLoading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"60vh\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsxs(Box,{p:3,children:[/*#__PURE__*/_jsxs(Box,{mb:3,display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Connection Hub\"}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",color:\"textSecondary\",children:\"Monitor and manage all system connections\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:refreshing?/*#__PURE__*/_jsx(CircularProgress,{size:20}):/*#__PURE__*/_jsx(Refresh,{}),onClick:handleRefresh,disabled:refreshing,children:refreshing?'Refreshing...':'Refresh'})]}),/*#__PURE__*/_jsx(Paper,{sx:{mb:3},children:/*#__PURE__*/_jsxs(Tabs,{value:tabValue,onChange:handleTabChange,\"aria-label\":\"connection tabs\",children:[/*#__PURE__*/_jsx(Tab,{label:\"System Status\"}),/*#__PURE__*/_jsx(Tab,{label:\"User Connections\"}),/*#__PURE__*/_jsx(Tab,{label:\"Real-time\"}),/*#__PURE__*/_jsx(Tab,{label:\"External APIs\"})]})}),tabValue===0&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Alert,{severity:systemHealth?'success':'warning',sx:{mb:2},children:systemHealth?`All systems operational as of ${new Date(systemHealth.timestamp).toLocaleString()}`:'System status check in progress...'})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(Database,{sx:{mr:1,verticalAlign:'middle'}}),\"Core Services\"]}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:getStatusIcon(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service=systemHealth.services)===null||_systemHealth$service===void 0?void 0:(_systemHealth$service2=_systemHealth$service.database)===null||_systemHealth$service2===void 0?void 0:_systemHealth$service2.status)}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Database Connection\",secondary:`MongoDB - ${(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service3=systemHealth.services)===null||_systemHealth$service3===void 0?void 0:(_systemHealth$service4=_systemHealth$service3.database)===null||_systemHealth$service4===void 0?void 0:_systemHealth$service4.status)||'Unknown'}`}),/*#__PURE__*/_jsx(Chip,{label:(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service5=systemHealth.services)===null||_systemHealth$service5===void 0?void 0:(_systemHealth$service6=_systemHealth$service5.database)===null||_systemHealth$service6===void 0?void 0:_systemHealth$service6.status)||'Unknown',color:getStatusColor(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service7=systemHealth.services)===null||_systemHealth$service7===void 0?void 0:(_systemHealth$service8=_systemHealth$service7.database)===null||_systemHealth$service8===void 0?void 0:_systemHealth$service8.status),size:\"small\"})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:getStatusIcon(socketConnected?'connected':'disconnected')}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Real-time Server\",secondary:`WebSocket - ${socketConnected?'Connected':'Disconnected'}`}),/*#__PURE__*/_jsx(Chip,{label:socketConnected?'Connected':'Disconnected',color:getStatusColor(socketConnected?'connected':'disconnected'),size:\"small\"})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:getStatusIcon(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service9=systemHealth.services)===null||_systemHealth$service9===void 0?void 0:(_systemHealth$service0=_systemHealth$service9.cache)===null||_systemHealth$service0===void 0?void 0:_systemHealth$service0.status)}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Cache Service\",secondary:`${(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service1=systemHealth.services)===null||_systemHealth$service1===void 0?void 0:(_systemHealth$service10=_systemHealth$service1.cache)===null||_systemHealth$service10===void 0?void 0:_systemHealth$service10.name)||'Cache'} - ${(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service11=systemHealth.services)===null||_systemHealth$service11===void 0?void 0:(_systemHealth$service12=_systemHealth$service11.cache)===null||_systemHealth$service12===void 0?void 0:_systemHealth$service12.status)||'Unknown'}`}),/*#__PURE__*/_jsx(Chip,{label:(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service13=systemHealth.services)===null||_systemHealth$service13===void 0?void 0:(_systemHealth$service14=_systemHealth$service13.cache)===null||_systemHealth$service14===void 0?void 0:_systemHealth$service14.status)||'Unknown',color:getStatusColor(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service15=systemHealth.services)===null||_systemHealth$service15===void 0?void 0:(_systemHealth$service16=_systemHealth$service15.cache)===null||_systemHealth$service16===void 0?void 0:_systemHealth$service16.status),size:\"small\"})]})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(Speed,{sx:{mr:1,verticalAlign:'middle'}}),\"System Metrics\"]}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(People,{color:\"primary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Total Users\",secondary:`${(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$metrics=systemHealth.metrics)===null||_systemHealth$metrics===void 0?void 0:_systemHealth$metrics.totalUsers)||0} registered users`}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"primary\",children:(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$metrics2=systemHealth.metrics)===null||_systemHealth$metrics2===void 0?void 0:_systemHealth$metrics2.totalUsers)||0})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(CheckCircle,{color:\"success\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Active Users\",secondary:`${(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$metrics3=systemHealth.metrics)===null||_systemHealth$metrics3===void 0?void 0:_systemHealth$metrics3.activeUsers)||0} users online`}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"success.main\",children:(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$metrics4=systemHealth.metrics)===null||_systemHealth$metrics4===void 0?void 0:_systemHealth$metrics4.activeUsers)||0})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Message,{color:\"info\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Total Messages\",secondary:`${(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$metrics5=systemHealth.metrics)===null||_systemHealth$metrics5===void 0?void 0:_systemHealth$metrics5.totalMessages)||0} messages sent`}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"info.main\",children:(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$metrics6=systemHealth.metrics)===null||_systemHealth$metrics6===void 0?void 0:_systemHealth$metrics6.totalMessages)||0})]})]})]})})})]}),tabValue===1&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(People,{sx:{mr:1,verticalAlign:'middle'}}),\"Your Connections\"]}),(userConnections===null||userConnections===void 0?void 0:(_userConnections$conn=userConnections.connections)===null||_userConnections$conn===void 0?void 0:_userConnections$conn.length)>0?/*#__PURE__*/_jsx(List,{children:userConnections.connections.map((connection,index)=>/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemText,{primary:connection.username,secondary:`Connected on ${new Date(connection.connectedAt).toLocaleDateString()}`}),/*#__PURE__*/_jsx(Chip,{label:connection.connectionStatus,color:getStatusColor(connection.connectionStatus),size:\"small\"})]},index))}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"No connections found. Start connecting with other users!\"})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Connection Stats\"}),/*#__PURE__*/_jsxs(Box,{textAlign:\"center\",mb:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",color:\"primary\",children:(userConnections===null||userConnections===void 0?void 0:userConnections.count)||0}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Active Connections\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,href:\"/users\",children:\"Find More Users\"})]})})})]}),tabValue===2&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(Wifi,{sx:{mr:1,verticalAlign:'middle'}}),\"Real-time Connection Status\"]}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:getStatusIcon(connectionStatus.connected?'connected':'disconnected')}),/*#__PURE__*/_jsx(ListItemText,{primary:\"WebSocket Connection\",secondary:connectionStatus.connected?'Active and receiving updates':'Disconnected'}),/*#__PURE__*/_jsx(Chip,{label:connectionStatus.connected?'Connected':'Disconnected',color:getStatusColor(connectionStatus.connected?'connected':'disconnected'),size:\"small\"})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(People,{color:\"info\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Online Users\",secondary:`${connectionStatus.onlineUsersCount} users currently online`}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"info.main\",children:connectionStatus.onlineUsersCount})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Message,{color:\"secondary\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Active Room\",secondary:connectionStatus.activeRoom||'No active room'})]})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Real-time Features\"}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(CheckCircle,{color:connectionStatus.connected?'success':'action'})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Instant Messaging\",secondary:\"Send and receive messages in real-time\"})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(CheckCircle,{color:connectionStatus.connected?'success':'action'})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Live Notifications\",secondary:\"Get notified of new activities instantly\"})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(CheckCircle,{color:connectionStatus.connected?'success':'action'})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"User Presence\",secondary:\"See who's online and active\"})]})]})]})})})]}),tabValue===3&&/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(CloudDone,{sx:{mr:1,verticalAlign:'middle'}}),\"External API Connections\"]}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:getStatusIcon(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service17=systemHealth.services)===null||_systemHealth$service17===void 0?void 0:(_systemHealth$service18=_systemHealth$service17.externalApis)===null||_systemHealth$service18===void 0?void 0:_systemHealth$service18.weather)}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Weather Service\",secondary:\"External weather data API connection\"}),/*#__PURE__*/_jsx(Chip,{label:(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service19=systemHealth.services)===null||_systemHealth$service19===void 0?void 0:(_systemHealth$service20=_systemHealth$service19.externalApis)===null||_systemHealth$service20===void 0?void 0:_systemHealth$service20.weather)||'Unknown',color:getStatusColor(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service21=systemHealth.services)===null||_systemHealth$service21===void 0?void 0:(_systemHealth$service22=_systemHealth$service21.externalApis)===null||_systemHealth$service22===void 0?void 0:_systemHealth$service22.weather),size:\"small\"})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:getStatusIcon(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service23=systemHealth.services)===null||_systemHealth$service23===void 0?void 0:(_systemHealth$service24=_systemHealth$service23.externalApis)===null||_systemHealth$service24===void 0?void 0:_systemHealth$service24.notifications)}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Notification Service\",secondary:\"Push notification service connection\"}),/*#__PURE__*/_jsx(Chip,{label:(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service25=systemHealth.services)===null||_systemHealth$service25===void 0?void 0:(_systemHealth$service26=_systemHealth$service25.externalApis)===null||_systemHealth$service26===void 0?void 0:_systemHealth$service26.notifications)||'Unknown',color:getStatusColor(systemHealth===null||systemHealth===void 0?void 0:(_systemHealth$service27=systemHealth.services)===null||_systemHealth$service27===void 0?void 0:(_systemHealth$service28=_systemHealth$service27.externalApis)===null||_systemHealth$service28===void 0?void 0:_systemHealth$service28.notifications),size:\"small\"})]})]}),/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Available API Endpoints\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",paragraph:true,children:\"\\u2022 GET /api/data/external/weather - Weather data \\u2022 GET /api/health - System health check \\u2022 WebSocket connection for real-time updates\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",size:\"small\",children:\"Test External APIs\"})]})})})})]});};export default ConnectionHub;","map":{"version":3,"names":["React","useState","useEffect","Box","Grid","Paper","Typography","Card","CardContent","List","ListItem","ListItemText","ListItemIcon","Chip","Button","Divider","Alert","CircularProgress","Tabs","Tab","CloudDone","Database","Wifi","People","Message","Notifications","Security","Speed","CheckCircle","Warning","Error","ErrorIcon","Refresh","useQuery","axios","useAuth","useSocket","jsx","_jsx","jsxs","_jsxs","ConnectionHub","_systemHealth$service","_systemHealth$service2","_systemHealth$service3","_systemHealth$service4","_systemHealth$service5","_systemHealth$service6","_systemHealth$service7","_systemHealth$service8","_systemHealth$service9","_systemHealth$service0","_systemHealth$service1","_systemHealth$service10","_systemHealth$service11","_systemHealth$service12","_systemHealth$service13","_systemHealth$service14","_systemHealth$service15","_systemHealth$service16","_systemHealth$metrics","_systemHealth$metrics2","_systemHealth$metrics3","_systemHealth$metrics4","_systemHealth$metrics5","_systemHealth$metrics6","_userConnections$conn","_systemHealth$service17","_systemHealth$service18","_systemHealth$service19","_systemHealth$service20","_systemHealth$service21","_systemHealth$service22","_systemHealth$service23","_systemHealth$service24","_systemHealth$service25","_systemHealth$service26","_systemHealth$service27","_systemHealth$service28","tabValue","setTabValue","systemHealth","setSystemHealth","refreshing","setRefreshing","user","connected","socketConnected","getConnectionStatus","data","healthData","isLoading","refetch","get","then","res","refetchInterval","onSuccess","userConnections","id","enabled","handleTabChange","event","newValue","handleRefresh","getStatusIcon","status","color","getStatusColor","connectionStatus","display","justifyContent","alignItems","minHeight","children","p","mb","variant","gutterBottom","startIcon","size","onClick","disabled","sx","value","onChange","label","container","spacing","item","xs","severity","Date","timestamp","toLocaleString","md","mr","verticalAlign","services","database","primary","secondary","cache","name","metrics","totalUsers","activeUsers","totalMessages","connections","length","map","connection","index","username","connectedAt","toLocaleDateString","textAlign","count","fullWidth","href","onlineUsersCount","activeRoom","externalApis","weather","notifications","my","paragraph"],"sources":["/workspace/client/src/components/ConnectionHub.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Grid,\n  Paper,\n  Typography,\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Chip,\n  Button,\n  Divider,\n  Alert,\n  CircularProgress,\n  Tabs,\n  Tab\n} from '@mui/material';\nimport {\n  CloudDone,\n  Database,\n  Wifi,\n  People,\n  Message,\n  Notifications,\n  Security,\n  Speed,\n  CheckCircle,\n  Warning,\n  Error as ErrorIcon,\n  Refresh\n} from '@mui/icons-material';\nimport { useQuery } from 'react-query';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSocket } from '../contexts/SocketContext';\n\nconst ConnectionHub = () => {\n  const [tabValue, setTabValue] = useState(0);\n  const [systemHealth, setSystemHealth] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n  \n  const { user } = useAuth();\n  const { connected: socketConnected, getConnectionStatus } = useSocket();\n\n  // Fetch system health data\n  const { data: healthData, isLoading, refetch } = useQuery(\n    'systemHealth',\n    () => axios.get('/api/data/health').then(res => res.data),\n    {\n      refetchInterval: 30000,\n      onSuccess: (data) => setSystemHealth(data)\n    }\n  );\n\n  // Fetch user connections\n  const { data: userConnections } = useQuery(\n    ['userConnections', user?.id],\n    () => axios.get(`/api/users/${user.id}/connections`).then(res => res.data),\n    {\n      enabled: !!user?.id\n    }\n  );\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    await refetch();\n    setRefreshing(false);\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'connected':\n      case 'active':\n        return <CheckCircle color=\"success\" />;\n      case 'simulated':\n        return <Warning color=\"warning\" />;\n      case 'disconnected':\n      case 'inactive':\n        return <ErrorIcon color=\"error\" />;\n      default:\n        return <Warning color=\"action\" />;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'connected':\n      case 'active':\n        return 'success';\n      case 'simulated':\n        return 'warning';\n      case 'disconnected':\n      case 'inactive':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  const connectionStatus = getConnectionStatus();\n\n  if (isLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box p={3}>\n      {/* Header */}\n      <Box mb={3} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Box>\n          <Typography variant=\"h4\" gutterBottom>\n            Connection Hub\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Monitor and manage all system connections\n          </Typography>\n        </Box>\n        <Button\n          variant=\"outlined\"\n          startIcon={refreshing ? <CircularProgress size={20} /> : <Refresh />}\n          onClick={handleRefresh}\n          disabled={refreshing}\n        >\n          {refreshing ? 'Refreshing...' : 'Refresh'}\n        </Button>\n      </Box>\n\n      {/* Tabs */}\n      <Paper sx={{ mb: 3 }}>\n        <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"connection tabs\">\n          <Tab label=\"System Status\" />\n          <Tab label=\"User Connections\" />\n          <Tab label=\"Real-time\" />\n          <Tab label=\"External APIs\" />\n        </Tabs>\n      </Paper>\n\n      {/* Tab Content */}\n      {tabValue === 0 && (\n        <Grid container spacing={3}>\n          {/* Overall Status */}\n          <Grid item xs={12}>\n            <Alert \n              severity={systemHealth ? 'success' : 'warning'} \n              sx={{ mb: 2 }}\n            >\n              {systemHealth \n                ? `All systems operational as of ${new Date(systemHealth.timestamp).toLocaleString()}`\n                : 'System status check in progress...'\n              }\n            </Alert>\n          </Grid>\n\n          {/* Core Services */}\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  <Database sx={{ mr: 1, verticalAlign: 'middle' }} />\n                  Core Services\n                </Typography>\n                \n                <List>\n                  <ListItem>\n                    <ListItemIcon>\n                      {getStatusIcon(systemHealth?.services?.database?.status)}\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Database Connection\"\n                      secondary={`MongoDB - ${systemHealth?.services?.database?.status || 'Unknown'}`}\n                    />\n                    <Chip \n                      label={systemHealth?.services?.database?.status || 'Unknown'} \n                      color={getStatusColor(systemHealth?.services?.database?.status)}\n                      size=\"small\"\n                    />\n                  </ListItem>\n\n                  <ListItem>\n                    <ListItemIcon>\n                      {getStatusIcon(socketConnected ? 'connected' : 'disconnected')}\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Real-time Server\"\n                      secondary={`WebSocket - ${socketConnected ? 'Connected' : 'Disconnected'}`}\n                    />\n                    <Chip \n                      label={socketConnected ? 'Connected' : 'Disconnected'} \n                      color={getStatusColor(socketConnected ? 'connected' : 'disconnected')}\n                      size=\"small\"\n                    />\n                  </ListItem>\n\n                  <ListItem>\n                    <ListItemIcon>\n                      {getStatusIcon(systemHealth?.services?.cache?.status)}\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Cache Service\"\n                      secondary={`${systemHealth?.services?.cache?.name || 'Cache'} - ${systemHealth?.services?.cache?.status || 'Unknown'}`}\n                    />\n                    <Chip \n                      label={systemHealth?.services?.cache?.status || 'Unknown'} \n                      color={getStatusColor(systemHealth?.services?.cache?.status)}\n                      size=\"small\"\n                    />\n                  </ListItem>\n                </List>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* Metrics */}\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  <Speed sx={{ mr: 1, verticalAlign: 'middle' }} />\n                  System Metrics\n                </Typography>\n                \n                <List>\n                  <ListItem>\n                    <ListItemIcon>\n                      <People color=\"primary\" />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Total Users\"\n                      secondary={`${systemHealth?.metrics?.totalUsers || 0} registered users`}\n                    />\n                    <Typography variant=\"h6\" color=\"primary\">\n                      {systemHealth?.metrics?.totalUsers || 0}\n                    </Typography>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListItemIcon>\n                      <CheckCircle color=\"success\" />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Active Users\"\n                      secondary={`${systemHealth?.metrics?.activeUsers || 0} users online`}\n                    />\n                    <Typography variant=\"h6\" color=\"success.main\">\n                      {systemHealth?.metrics?.activeUsers || 0}\n                    </Typography>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListItemIcon>\n                      <Message color=\"info\" />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Total Messages\"\n                      secondary={`${systemHealth?.metrics?.totalMessages || 0} messages sent`}\n                    />\n                    <Typography variant=\"h6\" color=\"info.main\">\n                      {systemHealth?.metrics?.totalMessages || 0}\n                    </Typography>\n                  </ListItem>\n                </List>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n\n      {tabValue === 1 && (\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  <People sx={{ mr: 1, verticalAlign: 'middle' }} />\n                  Your Connections\n                </Typography>\n                \n                {userConnections?.connections?.length > 0 ? (\n                  <List>\n                    {userConnections.connections.map((connection, index) => (\n                      <ListItem key={index}>\n                        <ListItemText\n                          primary={connection.username}\n                          secondary={`Connected on ${new Date(connection.connectedAt).toLocaleDateString()}`}\n                        />\n                        <Chip \n                          label={connection.connectionStatus} \n                          color={getStatusColor(connection.connectionStatus)}\n                          size=\"small\"\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n                ) : (\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    No connections found. Start connecting with other users!\n                  </Typography>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Connection Stats\n                </Typography>\n                <Box textAlign=\"center\" mb={2}>\n                  <Typography variant=\"h3\" color=\"primary\">\n                    {userConnections?.count || 0}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Active Connections\n                  </Typography>\n                </Box>\n                \n                <Button variant=\"contained\" fullWidth href=\"/users\">\n                  Find More Users\n                </Button>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n\n      {tabValue === 2 && (\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  <Wifi sx={{ mr: 1, verticalAlign: 'middle' }} />\n                  Real-time Connection Status\n                </Typography>\n                \n                <List>\n                  <ListItem>\n                    <ListItemIcon>\n                      {getStatusIcon(connectionStatus.connected ? 'connected' : 'disconnected')}\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"WebSocket Connection\"\n                      secondary={connectionStatus.connected ? 'Active and receiving updates' : 'Disconnected'}\n                    />\n                    <Chip \n                      label={connectionStatus.connected ? 'Connected' : 'Disconnected'} \n                      color={getStatusColor(connectionStatus.connected ? 'connected' : 'disconnected')}\n                      size=\"small\"\n                    />\n                  </ListItem>\n\n                  <ListItem>\n                    <ListItemIcon>\n                      <People color=\"info\" />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Online Users\"\n                      secondary={`${connectionStatus.onlineUsersCount} users currently online`}\n                    />\n                    <Typography variant=\"h6\" color=\"info.main\">\n                      {connectionStatus.onlineUsersCount}\n                    </Typography>\n                  </ListItem>\n\n                  <ListItem>\n                    <ListItemIcon>\n                      <Message color=\"secondary\" />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Active Room\"\n                      secondary={connectionStatus.activeRoom || 'No active room'}\n                    />\n                  </ListItem>\n                </List>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Real-time Features\n                </Typography>\n                \n                <List>\n                  <ListItem>\n                    <ListItemIcon>\n                      <CheckCircle color={connectionStatus.connected ? 'success' : 'action'} />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Instant Messaging\"\n                      secondary=\"Send and receive messages in real-time\"\n                    />\n                  </ListItem>\n\n                  <ListItem>\n                    <ListItemIcon>\n                      <CheckCircle color={connectionStatus.connected ? 'success' : 'action'} />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Live Notifications\"\n                      secondary=\"Get notified of new activities instantly\"\n                    />\n                  </ListItem>\n\n                  <ListItem>\n                    <ListItemIcon>\n                      <CheckCircle color={connectionStatus.connected ? 'success' : 'action'} />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"User Presence\"\n                      secondary=\"See who's online and active\"\n                    />\n                  </ListItem>\n                </List>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n\n      {tabValue === 3 && (\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  <CloudDone sx={{ mr: 1, verticalAlign: 'middle' }} />\n                  External API Connections\n                </Typography>\n                \n                <List>\n                  <ListItem>\n                    <ListItemIcon>\n                      {getStatusIcon(systemHealth?.services?.externalApis?.weather)}\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Weather Service\"\n                      secondary=\"External weather data API connection\"\n                    />\n                    <Chip \n                      label={systemHealth?.services?.externalApis?.weather || 'Unknown'} \n                      color={getStatusColor(systemHealth?.services?.externalApis?.weather)}\n                      size=\"small\"\n                    />\n                  </ListItem>\n\n                  <ListItem>\n                    <ListItemIcon>\n                      {getStatusIcon(systemHealth?.services?.externalApis?.notifications)}\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Notification Service\"\n                      secondary=\"Push notification service connection\"\n                    />\n                    <Chip \n                      label={systemHealth?.services?.externalApis?.notifications || 'Unknown'} \n                      color={getStatusColor(systemHealth?.services?.externalApis?.notifications)}\n                      size=\"small\"\n                    />\n                  </ListItem>\n                </List>\n\n                <Divider sx={{ my: 2 }} />\n\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Available API Endpoints\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n                  • GET /api/data/external/weather - Weather data\n                  • GET /api/health - System health check\n                  • WebSocket connection for real-time updates\n                </Typography>\n                \n                <Button variant=\"outlined\" size=\"small\">\n                  Test External APIs\n                </Button>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n    </Box>\n  );\n};\n\nexport default ConnectionHub;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}