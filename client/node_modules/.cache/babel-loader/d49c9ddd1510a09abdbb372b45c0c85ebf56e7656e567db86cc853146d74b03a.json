{"ast":null,"code":"var _jsxFileName = \"/workspace/client/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check authentication status on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await axios.get('/api/auth/me');\n          setUser(response.data.user);\n          toast.success('Connected successfully');\n        } catch (error) {\n          console.error('Authentication check failed:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n          setUser(null);\n          toast.error('Connection expired, please login again');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n  const login = async credentials => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/auth/login', credentials);\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(userData);\n      toast.success(`Welcome back, ${userData.username}! You are now connected.`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Connection failed';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/auth/register', userData);\n      const {\n        token: newToken,\n        user: newUser\n      } = response.data;\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(newUser);\n      toast.success(`Welcome, ${newUser.username}! Your account is now connected.`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      await axios.post('/api/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      setToken(null);\n      setUser(null);\n      delete axios.defaults.headers.common['Authorization'];\n      toast.info('Disconnected successfully');\n    }\n  };\n  const updateUser = updatedUser => {\n    setUser(prev => ({\n      ...prev,\n      ...updatedUser\n    }));\n  };\n  const connectToUser = async userId => {\n    try {\n      const response = await axios.post(`/api/users/${userId}/connect`);\n      toast.success('Connection request sent successfully');\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to send connection request';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const updateConnection = async (userId, status) => {\n    try {\n      const response = await axios.put(`/api/users/${userId}/connection`, {\n        status\n      });\n      toast.success(`Connection ${status} successfully`);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to update connection';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const checkConnectionHealth = async () => {\n    try {\n      const response = await axios.get('/api/health');\n      return response.data;\n    } catch (error) {\n      console.error('Health check failed:', error);\n      return null;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    token,\n    login,\n    register,\n    logout,\n    updateUser,\n    connectToUser,\n    updateConnection,\n    checkConnectionHealth,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"V8bE6DZSV5/nB2UMC4Uofie15PA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","checkAuth","response","get","data","success","error","console","removeItem","login","credentials","post","newToken","userData","setItem","username","_error$response","_error$response$data","errorMessage","register","newUser","_error$response2","_error$response2$data","logout","info","updateUser","updatedUser","prev","connectToUser","userId","_error$response3","_error$response3$data","updateConnection","status","put","_error$response4","_error$response4$data","checkConnectionHealth","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check authentication status on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await axios.get('/api/auth/me');\n          setUser(response.data.user);\n          toast.success('Connected successfully');\n        } catch (error) {\n          console.error('Authentication check failed:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n          setUser(null);\n          toast.error('Connection expired, please login again');\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, [token]);\n\n  const login = async (credentials) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/auth/login', credentials);\n      \n      const { token: newToken, user: userData } = response.data;\n      \n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(userData);\n      \n      toast.success(`Welcome back, ${userData.username}! You are now connected.`);\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Connection failed';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/auth/register', userData);\n      \n      const { token: newToken, user: newUser } = response.data;\n      \n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(newUser);\n      \n      toast.success(`Welcome, ${newUser.username}! Your account is now connected.`);\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Registration failed';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await axios.post('/api/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      setToken(null);\n      setUser(null);\n      delete axios.defaults.headers.common['Authorization'];\n      toast.info('Disconnected successfully');\n    }\n  };\n\n  const updateUser = (updatedUser) => {\n    setUser(prev => ({ ...prev, ...updatedUser }));\n  };\n\n  const connectToUser = async (userId) => {\n    try {\n      const response = await axios.post(`/api/users/${userId}/connect`);\n      toast.success('Connection request sent successfully');\n      return { success: true, data: response.data };\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Failed to send connection request';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  const updateConnection = async (userId, status) => {\n    try {\n      const response = await axios.put(`/api/users/${userId}/connection`, { status });\n      toast.success(`Connection ${status} successfully`);\n      return { success: true, data: response.data };\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || 'Failed to update connection';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  const checkConnectionHealth = async () => {\n    try {\n      const response = await axios.get('/api/health');\n      return response.data;\n    } catch (error) {\n      console.error('Health check failed:', error);\n      return null;\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    token,\n    login,\n    register,\n    logout,\n    updateUser,\n    connectToUser,\n    updateConnection,\n    checkConnectionHealth,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}